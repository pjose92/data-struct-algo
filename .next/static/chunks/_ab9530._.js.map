{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/joseperez/Desktop/data-struct-algo/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/joseperez/Desktop/data-struct-algo/components/ui/tabs.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\n\nimport { cn } from '@/lib/utils';\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      'inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground',\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm',\n      className\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      'mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n      className\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,oKAAc,IAAI;AAE/B,MAAM,yBAAW,8JAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,oKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Users/joseperez/Desktop/data-struct-algo/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-lg border bg-card text-card-foreground shadow-sm',\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///Users/joseperez/Desktop/data-struct-algo/components/ui/scroll-area.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as ScrollAreaPrimitive from '@radix-ui/react-scroll-area';\n\nimport { cn } from '@/lib/utils';\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn('relative overflow-hidden', className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n));\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName;\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = 'vertical', ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      'flex touch-none select-none transition-colors',\n      orientation === 'vertical' &&\n        'h-full w-2.5 border-l border-l-transparent p-[1px]',\n      orientation === 'horizontal' &&\n        'h-2.5 flex-col border-t border-t-transparent p-[1px]',\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n));\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName;\n\nexport { ScrollArea, ScrollBar };\n"],"names":[],"mappings":";;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,2BAAa,8JAAM,UAAU,MAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,8KAAoB,IAAI;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,8KAAoB,QAAQ;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,8KAAoB,MAAM;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,8KAAoB,IAAI,CAAC,WAAW;AAE7D,MAAM,0BAAY,8JAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,8KAAoB,mBAAmB;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,8KAAoB,eAAe;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,8KAAoB,mBAAmB,CAAC,WAAW"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///Users/joseperez/Desktop/data-struct-algo/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file:///Users/joseperez/Desktop/data-struct-algo/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = 'Input';\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///Users/joseperez/Desktop/data-struct-algo/components/visualizations/DataStructureViz.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\n\ninterface Node {\n  value: string | number;\n  x: number;\n  y: number;\n  next?: Node;\n}\n\ninterface VisualizationProps {\n  type: string;\n}\n\nexport function DataStructureViz({ type }: VisualizationProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [nodes, setNodes] = useState<Node[]>([]);\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw based on structure type\n    switch (type) {\n      case 'array-viz':\n        drawArray(ctx, nodes);\n        break;\n      case 'linked-list-viz':\n        drawLinkedList(ctx, nodes);\n        break;\n      case 'stack-viz':\n        drawStack(ctx, nodes);\n        break;\n      case 'queue-viz':\n        drawQueue(ctx, nodes);\n        break;\n    }\n  }, [nodes, type]);\n\n  const drawArray = (ctx: CanvasRenderingContext2D, nodes: Node[]) => {\n    const boxSize = 60;\n    const startX = 50;\n    const startY = 100;\n\n    nodes.forEach((node, index) => {\n      // Draw box\n      ctx.strokeStyle = '#666';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(startX + index * boxSize, startY, boxSize, boxSize);\n\n      // Draw value\n      ctx.fillStyle = '#333';\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(\n        node.value.toString(),\n        startX + index * boxSize + boxSize / 2,\n        startY + boxSize / 2\n      );\n\n      // Draw index\n      ctx.fillStyle = '#666';\n      ctx.font = '14px Arial';\n      ctx.fillText(\n        index.toString(),\n        startX + index * boxSize + boxSize / 2,\n        startY - 10\n      );\n    });\n  };\n\n  const drawLinkedList = (ctx: CanvasRenderingContext2D, nodes: Node[]) => {\n    const boxSize = 60;\n    const startX = 50;\n    const startY = 100;\n\n    nodes.forEach((node, index) => {\n      // Draw node\n      ctx.strokeStyle = '#666';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(startX + index * (boxSize + 40), startY, boxSize, boxSize);\n\n      // Draw value\n      ctx.fillStyle = '#333';\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(\n        node.value.toString(),\n        startX + index * (boxSize + 40) + boxSize / 2,\n        startY + boxSize / 2\n      );\n\n      // Draw arrow\n      if (index < nodes.length - 1) {\n        ctx.beginPath();\n        ctx.moveTo(startX + index * (boxSize + 40) + boxSize, startY + boxSize / 2);\n        ctx.lineTo(startX + (index + 1) * (boxSize + 40), startY + boxSize / 2);\n        ctx.stroke();\n\n        // Draw arrowhead\n        ctx.beginPath();\n        ctx.moveTo(startX + (index + 1) * (boxSize + 40), startY + boxSize / 2);\n        ctx.lineTo(\n          startX + (index + 1) * (boxSize + 40) - 10,\n          startY + boxSize / 2 - 5\n        );\n        ctx.lineTo(\n          startX + (index + 1) * (boxSize + 40) - 10,\n          startY + boxSize / 2 + 5\n        );\n        ctx.closePath();\n        ctx.fill();\n      }\n    });\n  };\n\n  const drawStack = (ctx: CanvasRenderingContext2D, nodes: Node[]) => {\n    const boxSize = 60;\n    const startX = 150;\n    const startY = 200;\n\n    nodes.forEach((node, index) => {\n      const y = startY - index * boxSize;\n      \n      // Draw box\n      ctx.strokeStyle = '#666';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(startX, y, boxSize, boxSize);\n\n      // Draw value\n      ctx.fillStyle = '#333';\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(node.value.toString(), startX + boxSize / 2, y + boxSize / 2);\n    });\n  };\n\n  const drawQueue = (ctx: CanvasRenderingContext2D, nodes: Node[]) => {\n    const boxSize = 60;\n    const startX = 50;\n    const startY = 100;\n\n    nodes.forEach((node, index) => {\n      // Draw box\n      ctx.strokeStyle = '#666';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(startX + index * boxSize, startY, boxSize, boxSize);\n\n      // Draw value\n      ctx.fillStyle = '#333';\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(\n        node.value.toString(),\n        startX + index * boxSize + boxSize / 2,\n        startY + boxSize / 2\n      );\n\n      // Label front and rear\n      if (index === 0) {\n        ctx.fillText('Front', startX + index * boxSize + boxSize / 2, startY - 10);\n      }\n      if (index === nodes.length - 1) {\n        ctx.fillText('Rear', startX + index * boxSize + boxSize / 2, startY - 10);\n      }\n    });\n  };\n\n  const handleAdd = () => {\n    if (!inputValue) return;\n\n    let newNodes = [...nodes];\n    switch (type) {\n      case 'array-viz':\n      case 'linked-list-viz':\n        newNodes.push({ value: inputValue, x: 0, y: 0 });\n        break;\n      case 'stack-viz':\n        newNodes.push({ value: inputValue, x: 0, y: 0 });\n        break;\n      case 'queue-viz':\n        newNodes.push({ value: inputValue, x: 0, y: 0 });\n        break;\n    }\n    setNodes(newNodes);\n    setInputValue('');\n  };\n\n  const handleRemove = () => {\n    if (nodes.length === 0) return;\n\n    let newNodes = [...nodes];\n    switch (type) {\n      case 'array-viz':\n        newNodes.pop();\n        break;\n      case 'stack-viz':\n        newNodes.pop();\n        break;\n      case 'queue-viz':\n        newNodes.shift();\n        break;\n      case 'linked-list-viz':\n        newNodes.pop();\n        break;\n    }\n    setNodes(newNodes);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex gap-2\">\n        <Input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder=\"Enter value\"\n          className=\"w-32\"\n        />\n        <Button onClick={handleAdd}>Add</Button>\n        <Button variant=\"outline\" onClick={handleRemove}>\n          Remove\n        </Button>\n      </div>\n      <canvas\n        ref={canvasRef}\n        width={800}\n        height={300}\n        className=\"border rounded-lg bg-white\"\n      />\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 628, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 634, "column": 0}, "map": {"version":3,"sources":["file:///Users/joseperez/Desktop/data-struct-algo/components/visualizations/AlgorithmViz.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card } from '@/components/ui/card';\n\ninterface VisualizationProps {\n  type: string;\n}\n\ninterface Step {\n  array: number[];\n  description: string;\n  comparingIndices: number[];\n  swappedIndices: number[];\n}\n\nexport function AlgorithmViz({ type }: VisualizationProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [array, setArray] = useState<number[]>([]);\n  const [inputValue, setInputValue] = useState('');\n  const [sorting, setSorting] = useState(false);\n  const [currentStep, setCurrentStep] = useState(-1);\n  const [steps, setSteps] = useState<Step[]>([]);\n  const [searchValue, setSearchValue] = useState<number>(0);\n  const [searchIndex, setSearchIndex] = useState<number>(-1);\n  const [speed, setSpeed] = useState<number>(1000); // milliseconds between steps\n  const [isAutoPlaying, setIsAutoPlaying] = useState(false);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (steps.length > 0 && currentStep >= 0) {\n      const step = steps[currentStep];\n      drawArray(ctx, step.array, step.comparingIndices, step.swappedIndices, searchIndex);\n    } else {\n      drawArray(ctx, array, [], [], searchIndex);\n    }\n  }, [array, currentStep, searchIndex, steps]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n    if (isAutoPlaying && currentStep < steps.length - 1) {\n      intervalId = setInterval(() => {\n        setCurrentStep(prev => {\n          if (prev >= steps.length - 1) {\n            setIsAutoPlaying(false);\n            return prev;\n          }\n          return prev + 1;\n        });\n      }, speed);\n    }\n    return () => clearInterval(intervalId);\n  }, [isAutoPlaying, currentStep, steps.length, speed]);\n\n  const drawArray = (\n    ctx: CanvasRenderingContext2D,\n    arr: number[],\n    comparingIndices: number[] = [],\n    swappedIndices: number[] = [],\n    searchHighlight: number = -1\n  ) => {\n    const barWidth = 40;\n    const spacing = 10;\n    const maxHeight = 200;\n    const startX = 50;\n    const startY = 250;\n\n    // Draw array access count\n    ctx.fillStyle = '#666';\n    ctx.font = '14px Arial';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Array Accesses: ${currentStep + 1}`, 10, 30);\n\n    arr.forEach((value, index) => {\n      const height = (value / Math.max(...arr)) * maxHeight;\n      const x = startX + index * (barWidth + spacing);\n      const y = startY - height;\n\n      // Determine bar color based on its state\n      let color = '#4dabf7'; // Default blue\n      if (comparingIndices.includes(index)) {\n        color = '#ffd43b'; // Yellow for comparing\n      }\n      if (swappedIndices.includes(index)) {\n        color = '#ff6b6b'; // Red for swapped\n      }\n      if (index === searchHighlight) {\n        color = '#4ade80'; // Green for found element\n      }\n\n      // Draw bar\n      ctx.fillStyle = color;\n      ctx.fillRect(x, y, barWidth, height);\n\n      // Draw border\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(x, y, barWidth, height);\n\n      // Draw value\n      ctx.fillStyle = '#333';\n      ctx.font = '14px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(value.toString(), x + barWidth / 2, startY + 20);\n\n      // Draw index\n      ctx.fillStyle = '#666';\n      ctx.font = '12px Arial';\n      ctx.fillText(`[${index}]`, x + barWidth / 2, startY + 35);\n    });\n  };\n\n  const generateRandomArray = () => {\n    const newArray = Array.from({ length: 8 }, () =>\n      Math.floor(Math.random() * 100)\n    );\n    setArray(newArray);\n    setSteps([]);\n    setCurrentStep(-1);\n    setSearchIndex(-1);\n    setIsAutoPlaying(false);\n  };\n\n  const bubbleSort = async () => {\n    setSorting(true);\n    const arr = [...array];\n    const newSteps: Step[] = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length - i - 1; j++) {\n        const step: Step = {\n          array: [...arr],\n          description: `Comparing elements at indices ${j} and ${j + 1}`,\n          comparingIndices: [j, j + 1],\n          swappedIndices: []\n        };\n\n        if (arr[j] > arr[j + 1]) {\n          [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n          step.description += ` and swapping them because ${arr[j + 1]} > ${arr[j]}`;\n          step.swappedIndices = [j, j + 1];\n        }\n\n        newSteps.push(step);\n      }\n    }\n\n    setSteps(newSteps);\n    setCurrentStep(0);\n    setSorting(false);\n  };\n\n  const quickSort = async () => {\n    setSorting(true);\n    const arr = [...array];\n    const newSteps: Step[] = [];\n\n    const partition = (arr: number[], low: number, high: number) => {\n      const pivot = arr[high];\n      let i = low - 1;\n\n      newSteps.push({\n        array: [...arr],\n        description: `Choosing pivot value: ${pivot}`,\n        comparingIndices: [high],\n        swappedIndices: []\n      });\n\n      for (let j = low; j < high; j++) {\n        newSteps.push({\n          array: [...arr],\n          description: `Comparing element ${arr[j]} with pivot ${pivot}`,\n          comparingIndices: [j, high],\n          swappedIndices: []\n        });\n\n        if (arr[j] < pivot) {\n          i++;\n          [arr[i], arr[j]] = [arr[j], arr[i]];\n          newSteps.push({\n            array: [...arr],\n            description: `Swapping elements ${arr[i]} and ${arr[j]}`,\n            comparingIndices: [j, high],\n            swappedIndices: [i, j]\n          });\n        }\n      }\n\n      [arr[i + 1], arr[high]] = [arr[high], arr[i + 1]];\n      newSteps.push({\n        array: [...arr],\n        description: `Placing pivot ${pivot} in its final position`,\n        comparingIndices: [],\n        swappedIndices: [i + 1, high]\n      });\n\n      return i + 1;\n    };\n\n    const sort = (arr: number[], low: number, high: number) => {\n      if (low < high) {\n        const pi = partition(arr, low, high);\n        sort(arr, low, pi - 1);\n        sort(arr, pi + 1, high);\n      }\n    };\n\n    sort(arr, 0, arr.length - 1);\n    setSteps(newSteps);\n    setCurrentStep(0);\n    setSorting(false);\n  };\n\n  const binarySearch = () => {\n    const sortedArray = [...array].sort((a, b) => a - b);\n    setArray(sortedArray);\n    \n    const newSteps: Step[] = [];\n    let left = 0;\n    let right = sortedArray.length - 1;\n    \n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2);\n      \n      newSteps.push({\n        array: sortedArray,\n        description: `Checking middle element at index ${mid}: ${sortedArray[mid]}`,\n        comparingIndices: [mid],\n        swappedIndices: []\n      });\n      \n      if (sortedArray[mid] === searchValue) {\n        newSteps.push({\n          array: sortedArray,\n          description: `Found ${searchValue} at index ${mid}!`,\n          comparingIndices: [],\n          swappedIndices: []\n        });\n        setSearchIndex(mid);\n        setSteps(newSteps);\n        setCurrentStep(0);\n        return;\n      }\n      \n      if (sortedArray[mid] < searchValue) {\n        left = mid + 1;\n        newSteps.push({\n          array: sortedArray,\n          description: `${searchValue} is greater than ${sortedArray[mid]}, searching right half`,\n          comparingIndices: [],\n          swappedIndices: []\n        });\n      } else {\n        right = mid - 1;\n        newSteps.push({\n          array: sortedArray,\n          description: `${searchValue} is less than ${sortedArray[mid]}, searching left half`,\n          comparingIndices: [],\n          swappedIndices: []\n        });\n      }\n    }\n    \n    newSteps.push({\n      array: sortedArray,\n      description: `${searchValue} not found in the array`,\n      comparingIndices: [],\n      swappedIndices: []\n    });\n    \n    setSearchIndex(-1);\n    setSteps(newSteps);\n    setCurrentStep(0);\n  };\n\n  const visualizeStep = (stepIndex: number) => {\n    if (stepIndex >= 0 && stepIndex < steps.length) {\n      setCurrentStep(stepIndex);\n    }\n  };\n\n  const getAlgorithmDescription = () => {\n    switch (type) {\n      case 'bubble-sort-viz':\n        return \"Bubble Sort repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order.\";\n      case 'quick-sort-viz':\n        return \"Quick Sort picks a 'pivot' element and partitions the array around it, then recursively sorts the sub-arrays.\";\n      case 'binary-search-viz':\n        return \"Binary Search efficiently finds items in a sorted array by repeatedly dividing the search interval in half.\";\n      default:\n        return \"\";\n    }\n  };\n\n  const renderControls = () => {\n    const commonControls = (\n      <div className=\"space-y-4\">\n        <div className=\"flex gap-2\">\n          <Button onClick={generateRandomArray}>Generate Random Array</Button>\n          {type.includes('sort') && (\n            <Button onClick={type === 'bubble-sort-viz' ? bubbleSort : quickSort} disabled={sorting}>\n              Sort\n            </Button>\n          )}\n          {type === 'binary-search-viz' && (\n            <>\n              <Input\n                type=\"number\"\n                value={searchValue}\n                onChange={(e) => setSearchValue(Number(e.target.value))}\n                placeholder=\"Search value\"\n                className=\"w-32\"\n              />\n              <Button onClick={binarySearch}>Search</Button>\n            </>\n          )}\n        </div>\n        \n        {steps.length > 0 && (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-4\">\n              <Button\n                onClick={() => visualizeStep(currentStep - 1)}\n                disabled={currentStep <= 0}\n              >\n                Previous Step\n              </Button>\n              <Button\n                onClick={() => setIsAutoPlaying(!isAutoPlaying)}\n              >\n                {isAutoPlaying ? \"Pause\" : \"Auto Play\"}\n              </Button>\n              <Button\n                onClick={() => visualizeStep(currentStep + 1)}\n                disabled={currentStep >= steps.length - 1}\n              >\n                Next Step\n              </Button>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm\">Speed:</span>\n                <Input\n                  type=\"range\"\n                  min=\"100\"\n                  max=\"2000\"\n                  step=\"100\"\n                  value={speed}\n                  onChange={(e) => setSpeed(Number(e.target.value))}\n                  className=\"w-32\"\n                />\n                <span className=\"text-sm\">{speed}ms</span>\n              </div>\n            </div>\n            \n            <Card className=\"p-4 bg-muted\">\n              <p className=\"text-sm font-medium\">\n                Step {currentStep + 1} of {steps.length}:\n              </p>\n              <p className=\"text-sm text-muted-foreground\">\n                {steps[currentStep]?.description}\n              </p>\n            </Card>\n          </div>\n        )}\n      </div>\n    );\n\n    return (\n      <div className=\"space-y-4\">\n        <Card className=\"p-4 bg-muted\">\n          <p className=\"text-sm\">{getAlgorithmDescription()}</p>\n        </Card>\n        {commonControls}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {renderControls()}\n      <canvas\n        ref={canvasRef}\n        width={800}\n        height={300}\n        className=\"border rounded-lg bg-white\"\n      />\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1192, "column": 0}, "map": {"version":3,"sources":["file:///Users/joseperez/Desktop/data-struct-algo/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Code, BookOpen, Play } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useState } from \"react\";\nimport { DataStructureViz } from \"@/components/visualizations/DataStructureViz\";\nimport { AlgorithmViz } from \"@/components/visualizations/AlgorithmViz\";\n\nconst topics = {\n  dataStructures: [\n    {\n      title: \"Array\",\n      description:\n        \"A collection of elements stored in contiguous memory locations.\",\n      example:\n        \"Storing a list of temperatures for the week (e.g., Monday to Sunday).\",\n      code: `const temperatures = [22, 24, 21, 23, 25, 20, 19];\n// Accessing elements\nconsole.log(temperatures[0]); // Monday's temperature: 22\n// Adding an element\ntemperatures.push(18);\n// Removing last element\ntemperatures.pop();`,\n      visualization: \"array-viz\",\n    },\n    {\n      title: \"Linked List\",\n      description:\n        \"A linear collection of elements, where each element points to the next.\",\n      example: \"A playlist of songs, where each song points to the next one.\",\n      code: `class Node {\n  constructor(data) {\n    this.data = data;\n    this.next = null;\n  }\n}\n\nclass LinkedList {\n  constructor() {\n    this.head = null;\n  }\n  \n  append(data) {\n    const newNode = new Node(data);\n    if (!this.head) {\n      this.head = newNode;\n      return;\n    }\n    let current = this.head;\n    while (current.next) {\n      current = current.next;\n    }\n    current.next = newNode;\n  }\n}`,\n      visualization: \"linked-list-viz\",\n    },\n    {\n      title: \"Stack\",\n      description: \"A Last-In-First-Out (LIFO) data structure.\",\n      example: \"Browser history, undo operations in text editors.\",\n      code: `class Stack {\n  constructor() {\n    this.items = [];\n  }\n\n  push(element) {\n    this.items.push(element);\n  }\n\n  pop() {\n    if (this.isEmpty()) return \"Stack is empty\";\n    return this.items.pop();\n  }\n\n  peek() {\n    return this.items[this.items.length - 1];\n  }\n\n  isEmpty() {\n    return this.items.length === 0;\n  }\n}`,\n      visualization: \"stack-viz\",\n    },\n    {\n      title: \"Queue\",\n      description: \"A First-In-First-Out (FIFO) data structure.\",\n      example: \"Print queue, task scheduling.\",\n      code: `class Queue {\n  constructor() {\n    this.items = [];\n  }\n\n  enqueue(element) {\n    this.items.push(element);\n  }\n\n  dequeue() {\n    if (this.isEmpty()) return \"Queue is empty\";\n    return this.items.shift();\n  }\n\n  front() {\n    if (this.isEmpty()) return \"Queue is empty\";\n    return this.items[0];\n  }\n\n  isEmpty() {\n    return this.items.length === 0;\n  }\n}`,\n      visualization: \"queue-viz\",\n    },\n  ],\n  algorithms: [\n    {\n      title: \"Bubble Sort\",\n      description:\n        \"A simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order.\",\n      example: \"Sorting a list of numbers in ascending order.\",\n      code: `function bubbleSort(arr) {\n  const n = arr.length;\n  for (let i = 0; i < n - 1; i++) {\n    for (let j = 0; j < n - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        // Swap elements\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n      }\n    }\n  }\n  return arr;\n}`,\n      visualization: \"bubble-sort-viz\",\n    },\n    {\n      title: \"Binary Search\",\n      description:\n        \"An efficient algorithm for finding an item from a sorted list by repeatedly dividing the search interval in half.\",\n      example: \"Looking up a word in a dictionary.\",\n      code: `function binarySearch(arr, target) {\n  let left = 0;\n  let right = arr.length - 1;\n  \n  while (left <= right) {\n    const mid = Math.floor((left + right) / 2);\n    if (arr[mid] === target) return mid;\n    if (arr[mid] < target) left = mid + 1;\n    else right = mid - 1;\n  }\n  return -1;\n}`,\n      visualization: \"binary-search-viz\",\n    },\n    {\n      title: \"Quick Sort\",\n      description:\n        \"An efficient, in-place sorting algorithm that uses divide-and-conquer strategy.\",\n      example: \"Sorting large datasets, like sorting files by size.\",\n      code: `function quickSort(arr, low = 0, high = arr.length - 1) {\n  if (low < high) {\n    const pi = partition(arr, low, high);\n    quickSort(arr, low, pi - 1);\n    quickSort(arr, pi + 1, high);\n  }\n  return arr;\n}\n\nfunction partition(arr, low, high) {\n  const pivot = arr[high];\n  let i = low - 1;\n  \n  for (let j = low; j < high; j++) {\n    if (arr[j] < pivot) {\n      i++;\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n  }\n  \n  [arr[i + 1], arr[high]] = [arr[high], arr[i + 1]];\n  return i + 1;\n}`,\n      visualization: \"quick-sort-viz\",\n    },\n    {\n      title: \"Merge Sort\",\n      description:\n        \"A divide-and-conquer sorting algorithm that recursively breaks down a problem into smaller, more manageable subproblems until they become simple enough to solve directly.\",\n      example: \"Sorting large datasets that don't fit in memory.\",\n      code: `function mergeSort(arr) {\n  if (arr.length <= 1) return arr;\n\n  const mid = Math.floor(arr.length / 2);\n  const left = arr.slice(0, mid);\n  const right = arr.slice(mid);\n\n  return merge(mergeSort(left), mergeSort(right));\n}\n\nfunction merge(left, right) {\n  let result = [];\n  let leftIndex = 0;\n  let rightIndex = 0;\n\n  while (leftIndex < left.length && rightIndex < right.length) {\n    if (left[leftIndex] < right[rightIndex]) {\n      result.push(left[leftIndex]);\n      leftIndex++;\n    } else {\n      result.push(right[rightIndex]);\n      rightIndex++;\n    }\n  }\n\n  return result\n    .concat(left.slice(leftIndex))\n    .concat(right.slice(rightIndex));\n}`,\n      visualization: \"merge-sort-viz\",\n    },\n  ],\n};\n\nexport default function Home() {\n  const [activeTab, setActiveTab] = useState(\"dataStructures\");\n  const [selectedTopic, setSelectedTopic] = useState(topics.dataStructures[0]);\n\n  const renderVisualization = () => {\n    if (\n      selectedTopic.visualization.includes(\"sort\") ||\n      selectedTopic.visualization.includes(\"search\")\n    ) {\n      return <AlgorithmViz type={selectedTopic.visualization} />;\n    }\n    return <DataStructureViz type={selectedTopic.visualization} />;\n  };\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <header className=\"border-b\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <h1 className=\"text-4xl font-bold\">Data Structures & Algorithms</h1>\n          <p className=\"text-muted-foreground mt-2\">\n            Interactive guide to fundamental computer science concepts\n          </p>\n        </div>\n      </header>\n\n      <main className=\"container mx-auto px-4 py-8\">\n        <Tabs\n          value={activeTab}\n          onValueChange={(tab) => {\n            setActiveTab(tab);\n            setSelectedTopic(topics[tab as keyof typeof topics][0]);\n          }}\n          className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"dataStructures\">Data Structures</TabsTrigger>\n            <TabsTrigger value=\"algorithms\">Algorithms</TabsTrigger>\n          </TabsList>\n        </Tabs>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <Card className=\"md:col-span-1\">\n            <CardHeader>\n              <CardTitle>Topics</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ScrollArea className=\"h-[70vh]\">\n                <div className=\"space-y-2\">\n                  {topics[activeTab as keyof typeof topics].map((topic) => (\n                    <Button\n                      key={topic.title}\n                      variant={\n                        selectedTopic.title === topic.title\n                          ? \"secondary\"\n                          : \"ghost\"\n                      }\n                      className=\"w-full justify-start\"\n                      onClick={() => setSelectedTopic(topic)}>\n                      {topic.title}\n                    </Button>\n                  ))}\n                </div>\n              </ScrollArea>\n            </CardContent>\n          </Card>\n\n          <div className=\"md:col-span-3 space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>{selectedTopic.title}</CardTitle>\n                <CardDescription>{selectedTopic.description}</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-start space-x-2\">\n                    <BookOpen />\n                    <div>\n                      <h3 className=\"font-semibold\">Example case use</h3>\n                      <p className=\"text-muted-foreground\">\n                        {selectedTopic.example}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Code />\n                      <h3 className=\"font-semibold\">Implementation</h3>\n                    </div>\n                    <pre className=\"bg-muted p-4 rounded-lg overflow-x-auto\">\n                      <code>{selectedTopic.code}</code>\n                    </pre>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Play />\n                      <h3 className=\"font-semibold\">Visualization</h3>\n                    </div>\n                    <div className=\"bg-muted rounded-lg p-4\">\n                      {renderVisualization()}\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1776, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}